######################################################################
# EIPs Configuration - 연계 플랫폼 설정
eips:  
  agent:
    id: SEND-AGENT
    network: inner
    data-dir: .
    file-configurer:
      read-file: true
      write-file: false
      config-dir: ${eips.agent.data-dir}/config
  command:
    topic:
      aRoute: data-a-${USERDOMAIN_ROAMINGPROFILE}
      bRoute: data-b-${USERDOMAIN_ROAMINGPROFILE}
      historyRoute : history-topic-${USERDOMAIN_ROAMINGPROFILE}
######################################################################
# GMD Configuration - 국가기준 설정
gmd:
  datasource:
    oracle:
      driver-class-name: oracle.jdbc.driver.OracleDriver
      url: jdbc:oracle:thin:@10.47.39.124:1521:ORCL
      username: GMDMF
      password: gmdmf
    tibero:
      driverClassName: com.tmax.tibero.jdbc.TbDriver
      url: jdbc:tibero:thin:@10.47.39.125:8629:DB_D_GMD
      username: GMDMF
      password: gmdmf         
######################################################################
# Framework Configuration - Spring Boot, Camel, Logback 등 프레임워크 설정
# Spring Boot
spring:
  kafka:
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  devtools:    livereload:      port: 35730
  datasource:
    driver-class-name: com.tmax.tibero.jdbc.TbDriver
    url: jdbc:tibero:thin:@10.47.39.125:8629:DB_D_GMD
#    driver-class-name: oracle.jdbc.driver.OracleDriver
#    url: jdbc:oracle:thin:@10.47.39.124:1521:ORCL
    username: GMDMF
    password: gmdmf
    hikari:
      maximum-pool-size: 4
  h2:
    console:
      enabled: true
  quartz:
    #scheduler-name: SJScheduler
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org:
        quartz:
          scheduler:
            instanceName: HDScheduler
            instanceId: HDSchedulerInstance
          threadPool:
            threadCount: 10
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_ 
            useProperties: true
            isClustered : true
            misfireThreshold: 600000
# Apache Camel
camel:
  springboot:
    main-run-controller: true
  component:
    kafka:
      #group-id: center
      #brokers: 10.175.91.211:9092,10.175.91.212:9092,10.175.91.213:9092
      brokers:  10.47.39.67:9092,10.47.39.124:9092
   

           
# Logging  
logging:
  level:
    root: error
    kr.go.gmd.eips: INFO
    org.apache.camel.component.sql.DefaultSqlPrepareStatementStrategy: TRACE #쿼리 보고 싶을 경우
    org.apache.camel.component.sql.stored: debug
    kr.go.gmd.eips.center.gmdm.provide.monitor.qualify.repository.QualifyRepository: INFO
    org.apache.kafka.clients.consumer.ConsumerConfig: error
    org.apache.kafka: warn